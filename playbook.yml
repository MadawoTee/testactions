- name: Install Node.js on EC2 instance
  hosts: ec2_instance
  gather_facts: no
  become: yes
  vars:
    ansible_ssh_private_key_file: /home/runner/.ssh/id_rsa
    ansible_python_interpreter: /usr/bin/python3
    ansible_user: ec2-user
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
  tasks:
    - name: Wait for SSH to come up
      wait_for:
        host: "{{ inventory_hostname }}"
        port: 22
        delay: 60
        timeout: 900
        state: started

    - name: Gathering Facts
      setup:
    - name: Update all packages
      dnf:
        name: '*'
        state: latest
    - name: Install tar and xz for unpacking Node.js binaries
      dnf:
        name:
          - tar
          - xz
        state: present

    - name: Download Node.js binary tarball
      get_url:
        url: https://nodejs.org/dist/v16.14.2/node-v16.14.2-linux-x64.tar.xz
        dest: /tmp/node-v16.14.2-linux-x64.tar.xz

    - name: Extract Node.js binary tarball
      command:
        cmd: tar -xf /tmp/node-v16.14.2-linux-x64.tar.xz -C /usr/local --strip-components 1
    - name: Verify Node.js installation
      command:
        cmd: node -v
      register: node_version

    - name: Display Node.js version
      debug:
        msg: 'Node.js version is {{ node_version.stdout }}'

    - name: Install PM2 globally
      npm:
        name: pm2
        global: yes

     - name: Update all packages before installing Docker
      yum:
        name: '*'
        state: latest
        update_only: yes

    - name: Ensure a list of yum packages are installed
      yum:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
        - python-pip
        - yum-utils
        - device-mapper-persistent-data
        - lvm2
        - amazon-linux-extras

    - name: Add extras repository
      shell: yum-config-manager --enable extras

    - name: Enable Some packages from amazon-linux-extras packages
      shell: "amazon-linux-extras enable python3.8 ansible2 docker"

    - name: clean yum metadata cache
      command: yum clean metadata
      args:
        warn: false

    - name: Ensure a list of yum packages are installed
      yum:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
        - python3.8
        - ansible
        - docker

    - name: Enable Docker CE service at startup
      service:
        name: docker
        state: started
        enabled: yes

    - name: Upgrade pip3
      shell: "python3.8 -m pip install pip --upgrade"

    - name: Ensure Python pip packages are installed
      pip:
        name: "{{ packages }}"
        executable: /usr/local/bin/pip3.8
      vars:
        packages:
        - boto
        - boto3
        - docker-compose
    